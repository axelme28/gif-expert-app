{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,eACTN,EAAWO,OAAOC,OAAS,IAC9BV,GAAY,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACrCR,EAAc,MAMd,SACI,uBACIS,KAAO,OACPC,MAASX,EACTY,SAnBe,SAACT,GACxBF,EAAcE,EAAEU,OAAOF,a,QCNlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGhC,OADAX,QAAQC,IAAI,CAACS,QAAMC,QAEf,sBAAKC,UAAY,yCAAjB,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAWF,GADxF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAG1CX,QAAQC,IAAIsB,GAXO,kBAYZA,GAZY,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAErB,ECLwB,SAACA,GACzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLV,KAAMa,EACNL,SAAU,GACZ,aAIf,CAACd,IAIGe,EDnBuBM,CAAarB,GAA/BW,EAAZ,EAAOL,KAAYQ,EAAnB,EAAmBA,QAEnB,OACG,qCAEK,6BAAKd,IAEJc,GAAW,wCAEZ,qBAAKlB,UAAY,YAAjB,SAGQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACmBA,GAAZA,EAAIC,aEjBtBY,EAAe,WAExB,MAAgC5C,mBAAS,CAAC,kBAA1C,mBAAOsB,EAAP,KAAiBvB,EAAjB,KAMA,OACI,qCACA,8CAEA,uBACA,8CACA,cAAC,EAAD,CAAaA,YAAeA,IAC5B,6BAEQuB,EAASQ,KAAI,SAAAR,GAAQ,OACjB,cAAC,EAAD,CAASA,SAAYA,GAAiBA,YCjB1DuB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.dfe4f65e.chunk.js","sourcesContent":["/* eslint-disable react/no-typos */\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'  \r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange  = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        console.log('Submit Done');\r\n        if(inputValue.trim().length > 2){\r\n        setCategory(cats => [ inputValue, ...cats, ])\r\n        setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n                />\r\n            \r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    console.log({title,url});\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=wwCTCV6Lk0sqYGFLpORGasZCKor4DEhK&q=${ encodeURI( category )}&limit=10`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    return gifs\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React  from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category)\r\n\r\n    return (\r\n       <>\r\n       \r\n            <h3>{category}</h3> \r\n\r\n            {loading && <p>Loading</p>}\r\n \r\n            <div className = \"card-grid\">\r\n                \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key = {img.id} {...img}/>\r\n                    ))\r\n                }            \r\n            </div>\r\n\r\n            \r\n\r\n        </>\r\n            \r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [], \r\n        loading: true\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n                    \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading : false\r\n                    },3000)\r\n                })\r\n                \r\n            });\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","\r\nimport React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    const [category, setCategory] = useState(['Rick and Mory'])\r\n\r\n    //const handleAdd = () =>{\r\n    //    setCategory([...category,'Hunter'])\r\n    //}\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        \r\n        <hr/>\r\n        <h3>Add Category</h3>\r\n        <AddCategory setCategory = {setCategory}/>\r\n        <ol>\r\n            {\r\n                category.map(category =>\r\n                    <GifGrid category = {category} key = {category}/>\r\n                )\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}